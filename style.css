body {
  margin: 4rem;
  /*Nesting can assist auto complete font-size: 1.25rem;*/
  font-size: 1.25rem;
  font-family: system-ui, sans-serif;
  text-align: center;
}

section {
  padding-block: 3rem;
}

.container {
  width: min(100% - 4rem, 50rem);
  margin-inline: auto;
}

.text-subdued {
  font-size: 1rem;
}

.surface-primary {
  background-color: hsl(206, 33%, 37%);
}
.surface-primary .text-subdued {
  opacity: 0.8;
}
.surface-secondary {
  background-color: hsl(253, 27%, 35%);
}
.surface-secondary .text-subdued {
  opacity: 0.7;
}
.surface-primary, .surface-secondary {
  color: white;
}
.surface-accent {
  background-color: hsl(45, 82%, 65%);
  color: black;
}
.surface-accent .text-subdued {
  opacity: 0.6;
}
.surface-primary .btn, .surface-secondary .btn, .surface-accent .btn {
  background-color: white;
  color: black;
}
.surface-primary .btn:hover, .surface-primary .btn:focus, .surface-secondary .btn:hover, .surface-secondary .btn:focus, .surface-accent .btn:hover, .surface-accent .btn:focus {
  background-color: inherit;
  color: inherit;
  outline: currentColor 2px solid;
}

.btn {
  display: inline-block;
  padding: 1em 2em;
  cursor: pointer;
  border: 0;
  text-decoration: none;
  text-transform: uppercase;
  color: white;
}
.btn__primary {
  background-color: hsl(206, 33%, 37%);
}
.btn__primary:hover, .btn__primary:focus {
  background-color: hsl(206, 33%, 25%);
}
.btn__secondary {
  background-color: hsl(253, 27%, 35%);
}
.btn__secondary:hover, .btn__secondary:focus {
  background-color: hsl(253, 27%, 20%);
}
.btn__accent {
  background-color: hsl(45, 82%, 65%);
}
.btn__accent:hover, .btn__accent:focus {
  background-color: hsl(45, 82%, 45%);
}

/*
   Nesting simply means putting a new selector within parents declaration

   & is very useful when nesting - #parentSelector

   //Application
   1. Nesting properties
   2. Nesting can create overly specific selectors with high specificity.  if you wouldn't write a selector like that in your CSS, then don't use nesting to create that when writing SCSS.
   3. You can use & parent selector before or after the selector - .text-centered & {}


   NB line-height 1.5 / max-width 45 ch
*/
/*
Application 
    1. Variables define by variables
    2. Are blocked scoped but one can you the !global
    3. Great for the following
        - Color values
        - Font sizes
        - Spacing values
        - Box shadows
        - Gradients
        - Border radii
*/
.body {
  color: #efefef;
  background: #333;
}

.header-nav-link {
  color: blue;
}

/*
Custom css props are live variables that can be seen by the browser
Sass variables can be seen by the browser
*/
/* Extends */
.bg-dark, .inverted-colors {
  background: black;
  padding: 1rem;
}

.inverted-colors {
  color: white;
}

/* Is only complied if called*/
.at {
  text-transform: uppercase;
  font-weight: bold;
  letter-spacing: 1px;
}

/*Better way of creating */
.tooltip-alert, .tooltip-warning {
  padding: 0.25em;
  background: #ededed;
  color: #323232;
}

.tooltip-warning {
  border: 2px solid orange;
}
.tooltip-alert {
  border: 2px solid red;
}

.acct {
  color: limegreen;
  text-transform: uppercase;
  font-weight: bold;
  letter-spacing: 1px;
}

.call-to-action {
  color: white;
  background: black;
}
.call-to-action a {
  color: yellow;
}
.call-to-action__title {
  font-size: 2.5rem;
  color: #f07178;
}

.btn--accent {
  background-color: #fff;
  padding: 0.5rem 1rem;
  text-transform: uppercase;
  font-weight: 700;
}

.hero {
  background-image: linear-gradient(-45deg, red, violet);
}

.red {
  color: red;
  background-color: black;
}

.box-red-100 {
  background-color: red;
  width: 100px;
  aspect-ratio: 1/1;
}

.box-black-150 {
  background-color: black;
  width: 150px;
  aspect-ratio: 1/1;
}

.box-blue-200 {
  background-color: blue;
  width: 200px;
  aspect-ratio: 1/1;
}

.bg-accent {
  background-color: #23ef91;
}

.bg-accent-light {
  background-color: rgb(189, 250.2, 222);
}

.bg-accent-dark {
  background-color: rgb(9.2881355932, 127.7118644068, 73.1440677966);
}

.title {
  color: #223345;
  border: 3px solid;
  border-color: #453422;
}

.new-color {
  color: rgb(127.5, 17, 127.5);
}

.example {
  width: 1;
}

.example {
  width: 2;
}

.example {
  width: 3;
}

.col-1 {
  flex-basis: 8.3333333333%;
}

.col-2 {
  flex-basis: 16.6666666667%;
}

.col-3 {
  flex-basis: 25%;
}

.col-4 {
  flex-basis: 33.3333333333%;
}

.col-5 {
  flex-basis: 41.6666666667%;
}

.col-6 {
  flex-basis: 50%;
}

.col-7 {
  flex-basis: 58.3333333333%;
}

.col-8 {
  flex-basis: 66.6666666667%;
}

.col-9 {
  flex-basis: 75%;
}

.col-10 {
  flex-basis: 83.3333333333%;
}

.col-11 {
  flex-basis: 91.6666666667%;
}

.col-12 {
  flex-basis: 100%;
}

.clr-primary-0 {
  color: #2553db;
}

.clr-primary-1 {
  color: rgb(58.8, 100.2, 222.6);
}

.clr-primary-2 {
  color: rgb(80.6, 117.4, 226.2);
}

.clr-primary-3 {
  color: rgb(102.4, 134.6, 229.8);
}

.clr-primary-4 {
  color: rgb(124.2, 151.8, 233.4);
}

.clr-primary-5 {
  color: #92a9ed;
}

.clr-primary-6 {
  color: rgb(167.8, 186.2, 240.6);
}

.clr-primary-7 {
  color: rgb(189.6, 203.4, 244.2);
}

.clr-primary-8 {
  color: rgb(211.4, 220.6, 247.8);
}

.clr-primary-9 {
  color: rgb(233.2, 237.8, 251.4);
}

.clr-primary-10 {
  color: white;
}

.red {
  color: red;
}

.blue {
  color: blue;
}

.green {
  color: green;
}

.primary {
  color: #ff0000;
}

.secondary {
  color: #00ff00;
}

.tertiary {
  color: #0000ff;
}

body {
  background: blue;
}

.tag {
  border-left: #dedede 1px solid;
}

.call-to-action {
  border-right: #dedede 5px solid;
}

h1 {
  text-transform: uppercase;
  line-height: 1.1;
}

h2 {
  text-transform: uppercase;
  line-height: 1.1;
}

h3 {
  text-transform: uppercase;
  line-height: 1.2;
}

.clr-primary {
  background-color: #4287f5;
  color: black;
}

.clr-secondary {
  background-color: #3a128a;
  color: white;
}

.clr-accent {
  background-color: #f59c42;
  color: black;
}

.button {
  display: inline-block;
  padding: 1em 3em;
  color: white;
  background-color: black;
}
.button:hover, .button:focus {
  color: black;
  background-color: black;
}

.badge {
  display: inline-block;
  padding: 0.25em 0.75em;
  color: red;
  background-color: blue;
}

body {
  width: 2200px;
}

body {
  background-color: #ededed;
  color: #343434;
}

body {
  font-size: 1rem;
}
@media screen and (min-width: 55em) {
  body {
    font-size: 1rem;
  }
}

body {
  font-style: 1.125rem;
}

.example {
  color: #1b6db5;
}

.example {
  color: darkblue;
}

/*# sourceMappingURL=style.css.map */
